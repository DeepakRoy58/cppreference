{
    "C++ Template": {
        "prefix": "cpptemplate",
        "body": [
            "#include <iostream>",
            "#include <algorithm>",	
            "using namespace std;",
            "",
            "#define int long long",
            "#define endl '\\n'",
            "#define all(v) (v).begin(), (v).end()",		
            "#define pb push_back",
            "#define fastio ios::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr);",
            "",
            "// Problem:",
            "/*",
            "   Briefly describe the problem or paste sample input/output here.",
            "*/",
            "",
            "// Observations:",
            "/*",
            "   - Note patterns, constraints, edge cases, or hints.",
            "*/",
            "",
            "// Approach:",
            "/*",
            "   - Step-by-step explanation of your algorithm.",
            "*/",
            "",
            "void solve() {",
            "    // Write your solution here",
            "}",
            "",
            "int32_t main() {",
            "    fastio;",
            "    int T = 1;",
            "    // cin >> T; // Uncomment if multiple test cases",
            "    while (T--) solve();",
            "    return 0;",
            "}",
            "",
            "// Notes:",
            "/*",
            "   - Keep solutions simple and readable.",
            "   - Always verify constraints and edge cases.",
            "*/"
        ],
        "description": "C++ competitive programming template"
    }
}
